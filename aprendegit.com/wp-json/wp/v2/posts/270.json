{"id":270,"date":"2013-01-14T10:04:31","date_gmt":"2013-01-14T09:04:31","guid":{"rendered":"https:\/\/aprendegit.com\/?p=270"},"modified":"2024-07-25T16:51:43","modified_gmt":"2024-07-25T14:51:43","slug":"ignorando-ficheros-en-git-parte-iv-mas-patrones","status":"publish","type":"post","link":"https:\/\/aprendegit.com\/ignorando-ficheros-en-git-parte-iv-mas-patrones\/","title":{"rendered":"Ignorando ficheros en git \u2013 Parte IV: M\u00e1s patrones"},"content":{"rendered":"<p>En la <a title=\"Ignorando ficheros en git \u2013 Parte III: Patrones\" href=\"https:\/\/aprendegit.com\/ignorando-ficheros-en-git-parte-iii-patrones\/\">entrega anterior<\/a> estuvimos analizando los patrones b\u00e1sicos que podemos utilizar para ignorar ficheros a trav\u00e9s de .gitignore, .git\/info\/exclude y .gitignore_local. En esta entrega veremos c\u00f3mo git utiliza los patrones de la shell dentro de estos ficheros.<\/p>\n<h1>Todos los patrones que usa git<\/h1>\n<p>Hagamos un peque\u00f1o repaso de lo que ya sabemos:<\/p>\n<ul>\n<li>Las l\u00edneas en blanco no se consideran un patr\u00f3n. Se usan para hacer los ficheros m\u00e1s legibles<\/li>\n<li>Si la linea comienza con #, se considera un comentario<\/li>\n<li>El prefijo <em>!<\/em> sirve para negar un patr\u00f3n<\/li>\n<li>Si el patr\u00f3n termina en \/ s\u00f3lo se aplicar\u00e1 a carpetas, es decir, un patr\u00f3n \u00abweb\/\u00bb ignorar\u00e1 la carpeta web\/ pero no ignorar\u00e1 un fichero que se llame web<\/li>\n<\/ul>\n<p>Hasta aqu\u00ed lo que ya hab\u00edamos visto \u00bfqu\u00e9 nos falta?<\/p>\n<ul>\n<li>Si el patr\u00f3n no termina en \/, git lo interpreta como un \u00ab<em><a href=\"http:\/\/en.wikipedia.org\/wiki\/Glob_(programming)\">shell glob pattern<\/a><\/em>\u00ab. Internamente git llama a la funci\u00f3n <a title=\"P\u00e1gina de manual de fnmatch (3)\" href=\"http:\/\/linux.die.net\/man\/3\/fnmatch\">fnmatch<\/a>\u00a0con el flag FNM_PATHNAME: esto significa que ni el * ni el ? incluyen el car\u00e1cter \/. En seguida veremos ejemplos.<\/li>\n<li>Una \/ al principio del patr\u00f3n indica el inicio de una ruta relativa a la carpeta en la que se encuentre el fichero .gitignore. Una l\u00ednea del tipo \/config.php ignorar\u00e1 el fichero config.php pero no ignorar\u00e1 web\/config.php<\/li>\n<\/ul>\n<h1>Shell globs en git<\/h1>\n<p>Los ficheros .gitignore, .git\/info\/exclude y .gitignore_local permiten incluir patrones de tipo shell. Si hab\u00e9is trabajado con cualquier shell de Unix o el CMD de windows, estar\u00e9is familiarizados con el funcionamiento de estos patrones. En caso contrario, aqu\u00ed ten\u00e9is las reglas que se siguen.<\/p>\n<blockquote><p>En una expresi\u00f3n que contenga el s\u00edmbolo \u00ab?\u00bb, \u00e9ste se corresponde con uno y s\u00f3lo un car\u00e1cter<\/p><\/blockquote>\n<p>Ejemplos:<\/p>\n<pre># Ignora los ficheros bg-01.jpg bg-lt.jpg\r\n#\r\n# No ignora los ficheros bg-1.jpg y bg-001.jpg\r\n#\r\nbg-??.jpg<\/pre>\n<p><span style=\"line-height: 24px;\">Este patr\u00f3n ignorar\u00e1 los ficheros cuyos nombres empiezan por \u00abbg-\u00ab, van seguidos exactamente de dos caracteres, y luego van seguidos de \u00ab.jpg\u00bb. Por eso el fichero bg-1.jpg no se ignora, porque entre \u00abbg-\u00bb y \u00ab.jpg\u00bb no hay dos caracteres, s\u00f3lo uno. <strong>Este ejemplo ilustra que el s\u00edmbolo \u00ab?\u00bb no indica un caracter opcional.<\/strong><\/span><\/p>\n<blockquote><p>En una expresi\u00f3n que contenga el s\u00edmbolo \u00bb * \u00ab, \u00e9ste se corresponde con cualquier n\u00famero de caracteres<\/p><\/blockquote>\n<p>Ejemplos:<\/p>\n<pre># Ignora todos los ficheros acabados en .nib\r\n#\r\n# Ignora tanto MainWindow.nib y builds\/MainWindow.nib\r\n*.nib\r\n\r\n#Ignora todos los ficheros que empiecen por \"bg-\" y acaben en \".jpg\"\r\nbg-*.jpg<\/pre>\n<p>En el primer ejemplo, estamos ignorando cualquier fichero que acabe en .nib, independientemente de la carpeta en la que se encuentre. En el segundo ejemplo, estamos ignorando cualquier fichero que empiece por \u00abbg-\u00bb y acabe por \u00ab.jpg\u00bb. Una pregunta: \u00bfse ignorar\u00e1 el fichero \u00abbg-.jpg\u00bb usando este patr\u00f3n?. La respuesta la ten\u00e9is un poco m\u00e1s abajo.<\/p>\n<div><span style=\"line-height: 24px;\"><br \/>\n<\/span><\/div>\n<blockquote><p>En una expresi\u00f3n que contenga\u00a0corchetes [ ], \u00e9stos se corresponden con uno y s\u00f3lo un caracter de los que est\u00e1n incluidos en los corchetes.<\/p><\/blockquote>\n<p>Ejemplos:<\/p>\n<pre># Ignora los ficheros *.o y *.a\r\n*.[ao]\r\n\r\n# Ignora los ficheros .nib y .xib\r\n*.[xn]ib<\/pre>\n<p>Estos patrones no ignoran los ficheros liberia.so o los ficheros mainwindow.ib. Es necesario que alguno de los caracteres que est\u00e1n entre corchetes aparezcan en el fichero.<\/p>\n<blockquote><p>Si se necesita utilizar los caracteres ? * [ ] en un patr\u00f3n, estos deber\u00e1n escaparse con \\<\/p><\/blockquote>\n<p>Ejemplo:<\/p>\n<pre># Ignorando ficheros que contienen [ y ] en el nombre\r\n#\r\n# Este patr\u00f3n ignorar\u00e1 los ficheros\r\n# cache\/cache-[hG7].cache y cache\/cache-[009].cache\r\ncache\/cache-\\[???\\].cache<\/pre>\n<h1>Shell globs y carpetas<\/h1>\n<p>\u00bfQu\u00e9 significa que git utilice el flag FNM_PATHNAME al llamar a la funci\u00f3n <a title=\"P\u00e1gina de manual de fnmatch (3)\" href=\"http:\/\/linux.die.net\/man\/3\/fnmatch\">fnmatch<\/a>? <strong>Que los s\u00edmbolos * ? y [] no incluyen el caracter \u00bb \/ \u00bb de separaci\u00f3n de directorios.<\/strong><\/p>\n<pre># El uso de FNM_PATHNAME hace que el siguiente patr\u00f3n ignore los ficheros\r\n# web\/fichero.html, pero no ignore el fichero web\/admin\/fichero.html\r\n#\r\n# Como el \" * \" no incluye \" \/ \", el fichero web\/admin\/fichero.html no \r\n# encaja con el patr\u00f3n\r\nweb\/*.html<\/pre>\n<p>\u00bfQu\u00e9 ocurre si necesitamos justo el efecto contrario? es decir, queremos ignorar todos los ficheros .html que est\u00e1n en las subcarpetas de web pero no ignorar los ficheros .html que est\u00e1n en web. El patr\u00f3n ser\u00eda el siguiente:<\/p>\n<pre># Ignora los ficheros .html que est\u00e1n en subcarpetas de la carpeta web\r\n# No ignora los ficheros web\/*.html\r\n#\r\n# Con este patr\u00f3n, el fichero web\/fichero.html se incluir\u00e1 en el repositorio\r\n# mientras que ficheros con web\/admin\/fichero.html o web\/images\/index.html se \r\n# ignorar\u00e1n\r\nweb\/**\/*.html<\/pre>\n<p>Otra pregunta: Este patr\u00f3n \u00bfignora el fichero web\/admin\/subcarpeta\/fichero.txt?<\/p>\n<h1>Rutas relativas<\/h1>\n<p>Un patr\u00f3n que comienza por \u00bb \/ \u00ab, indica que para decidir si el fichero se ignora o no, se utiliza una ruta relativa al fichero .gitignore:<\/p>\n<pre># Ignora los fichero *.c en la carpeta raiz del proyecto: memory.c\r\n# No ignora los ficheros en subcarpetas como\u00a0modules\/cache.c\r\n\/*.c<\/pre>\n<h1>Conclusiones<\/h1>\n<p>En esta entrega hemos visto c\u00f3mo interpreta git los patrones glob shell y los patrones a rutas relativas. En la siguiente entrega veremos c\u00f3mo podemos usar m\u00faltiples ficheros .gitignore. Estos nos ayudar\u00e1n a salvar las limitaciones que tenemos a la hora de trabajar con m\u00faltiples subcarpetas.<\/p>\n<h1>Respuestas:<\/h1>\n<ol>\n<li>Efectivamente, el patr\u00f3n \u00abbg-*.jpg\u00bb ignora que fichero \u00abbg-.jpg\u00bb. Eso es porque a diferencia de s\u00edmobol \u00ab?\u00bb, el s\u00edmbolo \u00ab*\u00bb se corresponde con cualquier n\u00famero de caracteres, incluido cero caracteres.<\/li>\n<li>El patr\u00f3n web\/**\/*.html no ignora el fichero web\/admin\/subcarpeta\/fichero.txt. Dado que se usa el par\u00e1metro FNM_PATHNAME, el \u00bb ** \u00bb no incluye el caracter \u00bb \/ \u00bb y por lo tanto este patr\u00f3n s\u00f3lo incluye las carpetas que son hijos de web, no incluye los nietos y niveles de m\u00e1s profundidad en la jerarqu\u00eda de carpetas.<\/li>\n<\/ol>\n","protected":false},"excerpt":{"rendered":"<p>En la entrega anterior estuvimos analizando los patrones b\u00e1sicos que podemos utilizar para ignorar ficheros a trav\u00e9s de .gitignore, .git\/info\/exclude y .gitignore_local. En esta entrega veremos c\u00f3mo git utiliza los patrones de la shell dentro de estos ficheros. Todos los patrones que usa git Hagamos un peque\u00f1o repaso de lo que ya sabemos: Las l\u00edneas [&hellip;]<\/p>\n","protected":false},"author":2,"featured_media":0,"comment_status":"closed","ping_status":"open","sticky":false,"template":"","format":"standard","meta":{"_monsterinsights_skip_tracking":false,"_monsterinsights_sitenote_active":false,"_monsterinsights_sitenote_note":"","_monsterinsights_sitenote_category":0,"jetpack_post_was_ever_published":false,"_jetpack_newsletter_access":"","_jetpack_dont_email_post_to_subs":false,"_jetpack_newsletter_tier_id":0,"_jetpack_memberships_contains_paywalled_content":false,"_jetpack_memberships_contains_paid_content":false,"footnotes":"","jetpack_publicize_message":"Seguimos con la serie sobre .gitignore: Ignorando ficheros en git \u2013 Parte IV: M\u00e1s patrones http:\/\/wp.me\/p2Y8Ja-4m","jetpack_publicize_feature_enabled":true,"jetpack_social_post_already_shared":true,"jetpack_social_options":{"image_generator_settings":{"template":"highway","enabled":false},"version":2}},"categories":[10],"tags":[15],"class_list":["post-270","post","type-post","status-publish","format-standard","hentry","category-general","tag-gitignore"],"jetpack_publicize_connections":[],"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v23.4 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>git - ignorando ficheros - Parte IV - M\u00e1s patrones<\/title>\n<meta name=\"description\" content=\"Seguimos el an\u00e1lisis de los patrones que git utiliza en los ficheros .gitignore con ejemplos de c\u00f3mo git interpreta los patrones glob shell.\" \/>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/aprendegit.com\/ignorando-ficheros-en-git-parte-iv-mas-patrones\/\" \/>\n<meta property=\"og:locale\" content=\"es_ES\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"git - ignorando ficheros - Parte IV - M\u00e1s patrones\" \/>\n<meta property=\"og:description\" content=\"Seguimos el an\u00e1lisis de los patrones que git utiliza en los ficheros .gitignore con ejemplos de c\u00f3mo git interpreta los patrones glob shell.\" \/>\n<meta property=\"og:url\" content=\"https:\/\/aprendegit.com\/ignorando-ficheros-en-git-parte-iv-mas-patrones\/\" \/>\n<meta property=\"og:site_name\" content=\"Aprende GIT\" \/>\n<meta property=\"article:published_time\" content=\"2013-01-14T09:04:31+00:00\" \/>\n<meta property=\"article:modified_time\" content=\"2024-07-25T14:51:43+00:00\" \/>\n<meta name=\"author\" content=\"alfonso\" \/>\n<meta name=\"twitter:label1\" content=\"Escrito por\" \/>\n\t<meta name=\"twitter:data1\" content=\"alfonso\" \/>\n\t<meta name=\"twitter:label2\" content=\"Tiempo de lectura\" \/>\n\t<meta name=\"twitter:data2\" content=\"5 minutos\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebPage\",\"@id\":\"https:\/\/aprendegit.com\/ignorando-ficheros-en-git-parte-iv-mas-patrones\/\",\"url\":\"https:\/\/aprendegit.com\/ignorando-ficheros-en-git-parte-iv-mas-patrones\/\",\"name\":\"git - ignorando ficheros - Parte IV - M\u00e1s patrones\",\"isPartOf\":{\"@id\":\"https:\/\/aprendegit.com\/#website\"},\"datePublished\":\"2013-01-14T09:04:31+00:00\",\"dateModified\":\"2024-07-25T14:51:43+00:00\",\"author\":{\"@id\":\"https:\/\/aprendegit.com\/#\/schema\/person\/d7815f12de5748b52eadab35cd0801d5\"},\"description\":\"Seguimos el an\u00e1lisis de los patrones que git utiliza en los ficheros .gitignore con ejemplos de c\u00f3mo git interpreta los patrones glob shell.\",\"inLanguage\":\"es\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/aprendegit.com\/ignorando-ficheros-en-git-parte-iv-mas-patrones\/\"]}]},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/aprendegit.com\/#website\",\"url\":\"https:\/\/aprendegit.com\/\",\"name\":\"Aprende GIT\",\"description\":\"Informaci\u00f3n y experiencias sobre el uso de git\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/aprendegit.com\/?s={search_term_string}\"},\"query-input\":{\"@type\":\"PropertyValueSpecification\",\"valueRequired\":true,\"valueName\":\"search_term_string\"}}],\"inLanguage\":\"es\"},{\"@type\":\"Person\",\"@id\":\"https:\/\/aprendegit.com\/#\/schema\/person\/d7815f12de5748b52eadab35cd0801d5\",\"name\":\"alfonso\",\"image\":{\"@type\":\"ImageObject\",\"inLanguage\":\"es\",\"@id\":\"https:\/\/aprendegit.com\/#\/schema\/person\/image\/\",\"url\":\"https:\/\/aprendegit.com\/wp-content\/litespeed\/avatar\/1\/11264ed1c2ec0decf145ada60ab2ee73.jpg?ver=1725196738\",\"contentUrl\":\"https:\/\/aprendegit.com\/wp-content\/litespeed\/avatar\/1\/11264ed1c2ec0decf145ada60ab2ee73.jpg?ver=1725196738\",\"caption\":\"alfonso\"},\"url\":\"https:\/\/aprendegit.com\/author\/alfonso\/\"}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"git - ignorando ficheros - Parte IV - M\u00e1s patrones","description":"Seguimos el an\u00e1lisis de los patrones que git utiliza en los ficheros .gitignore con ejemplos de c\u00f3mo git interpreta los patrones glob shell.","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/aprendegit.com\/ignorando-ficheros-en-git-parte-iv-mas-patrones\/","og_locale":"es_ES","og_type":"article","og_title":"git - ignorando ficheros - Parte IV - M\u00e1s patrones","og_description":"Seguimos el an\u00e1lisis de los patrones que git utiliza en los ficheros .gitignore con ejemplos de c\u00f3mo git interpreta los patrones glob shell.","og_url":"https:\/\/aprendegit.com\/ignorando-ficheros-en-git-parte-iv-mas-patrones\/","og_site_name":"Aprende GIT","article_published_time":"2013-01-14T09:04:31+00:00","article_modified_time":"2024-07-25T14:51:43+00:00","author":"alfonso","twitter_misc":{"Escrito por":"alfonso","Tiempo de lectura":"5 minutos"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebPage","@id":"https:\/\/aprendegit.com\/ignorando-ficheros-en-git-parte-iv-mas-patrones\/","url":"https:\/\/aprendegit.com\/ignorando-ficheros-en-git-parte-iv-mas-patrones\/","name":"git - ignorando ficheros - Parte IV - M\u00e1s patrones","isPartOf":{"@id":"https:\/\/aprendegit.com\/#website"},"datePublished":"2013-01-14T09:04:31+00:00","dateModified":"2024-07-25T14:51:43+00:00","author":{"@id":"https:\/\/aprendegit.com\/#\/schema\/person\/d7815f12de5748b52eadab35cd0801d5"},"description":"Seguimos el an\u00e1lisis de los patrones que git utiliza en los ficheros .gitignore con ejemplos de c\u00f3mo git interpreta los patrones glob shell.","inLanguage":"es","potentialAction":[{"@type":"ReadAction","target":["https:\/\/aprendegit.com\/ignorando-ficheros-en-git-parte-iv-mas-patrones\/"]}]},{"@type":"WebSite","@id":"https:\/\/aprendegit.com\/#website","url":"https:\/\/aprendegit.com\/","name":"Aprende GIT","description":"Informaci\u00f3n y experiencias sobre el uso de git","potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/aprendegit.com\/?s={search_term_string}"},"query-input":{"@type":"PropertyValueSpecification","valueRequired":true,"valueName":"search_term_string"}}],"inLanguage":"es"},{"@type":"Person","@id":"https:\/\/aprendegit.com\/#\/schema\/person\/d7815f12de5748b52eadab35cd0801d5","name":"alfonso","image":{"@type":"ImageObject","inLanguage":"es","@id":"https:\/\/aprendegit.com\/#\/schema\/person\/image\/","url":"https:\/\/aprendegit.com\/wp-content\/litespeed\/avatar\/1\/11264ed1c2ec0decf145ada60ab2ee73.jpg?ver=1725196738","contentUrl":"https:\/\/aprendegit.com\/wp-content\/litespeed\/avatar\/1\/11264ed1c2ec0decf145ada60ab2ee73.jpg?ver=1725196738","caption":"alfonso"},"url":"https:\/\/aprendegit.com\/author\/alfonso\/"}]}},"jetpack_featured_media_url":"","jetpack_shortlink":"https:\/\/wp.me\/p2Y8Ja-4m","jetpack_sharing_enabled":true,"_links":{"self":[{"href":"https:\/\/aprendegit.com\/wp-json\/wp\/v2\/posts\/270"}],"collection":[{"href":"https:\/\/aprendegit.com\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/aprendegit.com\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/aprendegit.com\/wp-json\/wp\/v2\/users\/2"}],"replies":[{"embeddable":true,"href":"https:\/\/aprendegit.com\/wp-json\/wp\/v2\/comments?post=270"}],"version-history":[{"count":17,"href":"https:\/\/aprendegit.com\/wp-json\/wp\/v2\/posts\/270\/revisions"}],"predecessor-version":[{"id":754,"href":"https:\/\/aprendegit.com\/wp-json\/wp\/v2\/posts\/270\/revisions\/754"}],"wp:attachment":[{"href":"https:\/\/aprendegit.com\/wp-json\/wp\/v2\/media?parent=270"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/aprendegit.com\/wp-json\/wp\/v2\/categories?post=270"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/aprendegit.com\/wp-json\/wp\/v2\/tags?post=270"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}