{"id":301,"date":"2013-01-21T14:23:17","date_gmt":"2013-01-21T13:23:17","guid":{"rendered":"https:\/\/aprendegit.com\/?p=301"},"modified":"2024-07-25T16:51:42","modified_gmt":"2024-07-25T14:51:42","slug":"opciones-del-comando-git-add","status":"publish","type":"post","link":"https:\/\/aprendegit.com\/opciones-del-comando-git-add\/","title":{"rendered":"Opciones del comando git add"},"content":{"rendered":"<p>Un comando con el que todos estamos familiarizados es git add. Cuando nos iniciamos en el uso de git, este es de los que no faltan en las recetas que podemos en ver en cualquier tutorial. Es de los primeros que empezamos a utilizar cuando aprendemos git \u00a1En el libro de git de Scott Chacon aparece en la <a href=\"http:\/\/git-scm.com\/book\/en\/Git-Basics-Recording-Changes-to-the-Repository\">secci\u00f3n 2.2<\/a>!<\/p>\n<p>Es una pieza fundamental del flujo b\u00e1sico de git ya que es el comando que mueve al \u00edndice las modificaciones que hayamos realizado. El \u00edndice es un snapshot del contenido del \u00e1rea de trabajo en un momento dado. Este snapshot es el que posteriormente se convertir\u00e1 en un commit.<\/p>\n<h1>La receta de git\u00a0add<\/h1>\n<p>La forma m\u00e1s habitual de invocar el comando git-add es:<\/p>\n<pre>$ git add .<\/pre>\n<p>Este comando a\u00f1ade al \u00edndice cualquier fichero nuevo o que haya sido modificado:<\/p>\n<pre>$ git add .\r\n$ git status\r\n# On branch master\r\n# Changes to be committed:\r\n# (use \"git reset HEAD &lt;file&gt;...\" to unstage)\r\n#\r\n#       new file: app\/assets\/javascripts\/home.js.coffee\r\n# \u00a0 \u00a0 \u00a0\u00a0new file: app\/assets\/stylesheets\/home.css.scss\r\n# \u00a0 \u00a0 \u00a0\u00a0new file: app\/controllers\/home_controller.rb\r\n# \u00a0 \u00a0 \u00a0\u00a0new file: app\/helpers\/home_helper.rb\r\n# \u00a0 \u00a0 \u00a0\u00a0new file: app\/views\/home\/index.html.erb\r\n# \u00a0 \u00a0 \u00a0\u00a0modified: config\/database.yml\r\n# \u00a0 \u00a0 \u00a0\u00a0modified: config\/routes.rb\r\n# \u00a0 \u00a0 \u00a0\u00a0new file: test\/functional\/home_controller_test.rb\r\n# \u00a0 \u00a0 \u00a0\u00a0new file: test\/unit\/helpers\/home_helper_test.rb\r\n#\r\n# Changes not staged for commit:\r\n# (use \"git add\/rm &lt;file&gt;...\" to update what will be committed)\r\n# (use \"git checkout -- &lt;file&gt;...\" to discard changes in working directory)\r\n#\r\n# \u00a0 \u00a0 \u00a0\u00a0<span style=\"color: #000000;\"><strong>deleted: app\/assets\/images\/rails.png<\/strong><\/span><\/pre>\n<p>Sin embargo, los ficheros borrados no se actualizan en el \u00edndice. En este caso, tendr\u00edamos que ejecutar el comando git rm\u00a0app\/assets\/images\/rails.png:<\/p>\n<pre>$ <strong><span style=\"color: #000000;\">git rm app\/assets\/images\/rails.png<\/span><\/strong>\r\nrm 'app\/assets\/images\/rails.png'\r\n$ git status\r\n# On branch master\r\n# Changes to be committed:\r\n# (use \"git reset HEAD &lt;file&gt;...\" to unstage)\r\n#\r\n<strong><span style=\"color: #000000;\"># deleted: app\/assets\/images\/rails.png<\/span><\/strong>\r\n# new file: app\/assets\/javascripts\/home.js.coffee\r\n# new file: app\/assets\/stylesheets\/home.css.scss\r\n# new file: app\/controllers\/home_controller.rb\r\n# new file: app\/helpers\/home_helper.rb\r\n# new file: app\/views\/home\/index.html.erb\r\n# modified: config\/database.yml\r\n# modified: config\/routes.rb\r\n# new file: test\/functional\/home_controller_test.rb\r\n# new file: test\/unit\/helpers\/home_helper_test.rb\r\n#<\/pre>\n<p>Las opciones -u y -A del comando git-add a\u00f1aden al \u00edndice los ficheros eliminados, aunque gestionan de manera diferente los ficheros nuevos. Veamoslo usando este mismo ejemplo.<\/p>\n<h1>git-add -u<\/h1>\n<p>Partimos de la siguiente \u00e1rea de trabajo:<\/p>\n<pre>$ git status\r\n# On branch master\r\n# Changes not staged for commit:\r\n# (use \"git add\/rm &lt;file&gt;...\" to update what will be committed)\r\n# (use \"git checkout -- &lt;file&gt;...\" to discard changes in working directory)\r\n#\r\n#    deleted: app\/assets\/images\/rails.png\r\n# \u00a0 \u00a0modified: config\/routes.rb\r\n#\r\n# Untracked files:\r\n# (use \"git add &lt;file&gt;...\" to include in what will be committed)\r\n#\r\n# \u00a0 \u00a0app\/assets\/javascripts\/home.js.coffee\r\n# \u00a0 \u00a0app\/assets\/stylesheets\/home.css.scss\r\n# \u00a0 \u00a0app\/controllers\/home_controller.rb\r\n# \u00a0 \u00a0app\/helpers\/home_helper.rb\r\n# \u00a0 \u00a0app\/views\/home\/\r\n# \u00a0 \u00a0test\/functional\/home_controller_test.rb\r\n# \u00a0 \u00a0test\/unit\/helpers\/\r\nno changes added to commit (use \"git add\" and\/or \"git commit -a\")<\/pre>\n<p>La opci\u00f3n -u s\u00f3lo a\u00f1ade al \u00edndice aquellos ficheros que ya est\u00e9n siendo monitorizados por git, as\u00ed que en este caso, \u00fanicamente se subir\u00e1n al \u00edndice rails.png y routes.rb:<\/p>\n<pre>$ git add -u\r\n$ git status\r\n# On branch master\r\n<span style=\"color: #000000;\"><strong># Changes to be committed:<\/strong><\/span>\r\n<span style=\"color: #000000;\"><strong># (use \"git reset HEAD &lt;file&gt;...\" to unstage)<\/strong><\/span>\r\n<span style=\"color: #000000;\"><strong>#<\/strong><\/span>\r\n<span style=\"color: #000000;\"><strong># \u00a0 \u00a0deleted: app\/assets\/images\/rails.png<\/strong><\/span>\r\n<span style=\"color: #000000;\"><strong># \u00a0 \u00a0modified: config\/routes.rb<\/strong><\/span>\r\n#\r\n# Untracked files:\r\n# (use \"git add &lt;file&gt;...\" to include in what will be committed)\r\n#\r\n# \u00a0 \u00a0app\/assets\/javascripts\/home.js.coffee\r\n# \u00a0 \u00a0app\/assets\/stylesheets\/home.css.scss\r\n# \u00a0 \u00a0app\/controllers\/home_controller.rb\r\n# \u00a0 \u00a0app\/helpers\/home_helper.rb\r\n# \u00a0 \u00a0app\/views\/home\/\r\n# \u00a0 \u00a0test\/functional\/home_controller_test.rb\r\n# \u00a0 \u00a0test\/unit\/helpers\/<\/pre>\n<p>La opci\u00f3n -u acepta un patr\u00f3n de b\u00fasqueda. Si este patr\u00f3n est\u00e1 vac\u00edo, el resultado es que se actualicen todos los ficheros borrados o modificados en el \u00e1rea de trabajo. Si el patr\u00f3n no est\u00e1 vac\u00edo, s\u00f3lo se actualizar\u00e1n en el \u00edndice los ficheros que encajen con el patr\u00f3n. En el siguiente ejemplo, ejecutamos el mismo comando para a\u00f1adir \u00fanicamente los ficheros de la carpeta config:<\/p>\n<pre><strong><span style=\"color: #000000;\">$ git add -u config\/*<\/span><\/strong>\r\n$ git status\r\n# On branch master\r\n<strong><span style=\"color: #000000;\"># Changes to be committed:<\/span><\/strong>\r\n<strong><span style=\"color: #000000;\"># (use \"git reset HEAD &lt;file&gt;...\" to unstage)<\/span><\/strong>\r\n<strong><span style=\"color: #000000;\">#<\/span><\/strong>\r\n<strong><span style=\"color: #000000;\"># \u00a0 \u00a0modified: config\/routes.rb<\/span><\/strong>\r\n#\r\n<strong><span style=\"color: #000000;\"># Changes not staged for commit:<\/span><\/strong>\r\n# (use \"git add\/rm &lt;file&gt;...\" to update what will be committed)\r\n# (use \"git checkout -- &lt;file&gt;...\" to discard changes in working directory)\r\n#\r\n<strong><span style=\"color: #000000;\"># \u00a0 \u00a0deleted: app\/assets\/images\/rails.png<\/span><\/strong>\r\n#\r\n# Untracked files:\r\n# (use \"git add &lt;file&gt;...\" to include in what will be committed)\r\n#\r\n# \u00a0 \u00a0app\/assets\/javascripts\/home.js.coffee\r\n# \u00a0 \u00a0app\/assets\/stylesheets\/home.css.scss\r\n# \u00a0 \u00a0app\/controllers\/home_controller.rb\r\n# \u00a0 \u00a0app\/helpers\/home_helper.rb\r\n# \u00a0 \u00a0app\/views\/home\/\r\n# \u00a0 \u00a0test\/functional\/home_controller_test.rb\r\n# \u00a0 \u00a0test\/unit\/helpers\/<\/pre>\n<h1>git-add -a<\/h1>\n<p>Esta opci\u00f3n funciona como la opci\u00f3n -u a\u00f1adiendo tambi\u00e9n a la b\u00fasqueda los ficheros del \u00e1rea de trabajo. El resultado es que los ficheros que no est\u00e9n siendo monitorizados tambi\u00e9n se a\u00f1adir\u00e1n al \u00edndice.<\/p>\n<p>Partimos de la siguiente situaci\u00f3n:<\/p>\n<pre>$ git status\r\n# On branch master\r\n# Changes not staged for commit:\r\n# (use \"git add\/rm &lt;file&gt;...\" to update what will be committed)\r\n# (use \"git checkout -- &lt;file&gt;...\" to discard changes in working directory)\r\n#\r\n#    deleted: app\/assets\/images\/rails.png\r\n#    modified: config\/routes.rb\r\n#\r\n# Untracked files:\r\n# (use \"git add &lt;file&gt;...\" to include in what will be committed)\r\n#\r\n#    app\/assets\/javascripts\/home.js.coffee\r\n#    app\/assets\/stylesheets\/home.css.scss\r\n#    app\/controllers\/home_controller.rb\r\n#    app\/helpers\/home_helper.rb\r\n#    app\/views\/home\/\r\n#    test\/functional\/home_controller_test.rb\r\n#    test\/unit\/helpers\/\r\nno changes added to commit (use \"git add\" and\/or \"git commit -a\")<\/pre>\n<p>Al ejecutar el comando git add -A, se a\u00f1adir\u00e1n al \u00edndice los ficheros borrados, los modificados y los nuevos:<\/p>\n<pre>$ git add -A\r\n$ git status\r\n# On branch master\r\n# Changes to be committed:\r\n# (use \"git reset HEAD &lt;file&gt;...\" to unstage)\r\n#\r\n#    deleted: app\/assets\/images\/rails.png\r\n#    new file: app\/assets\/javascripts\/home.js.coffee\r\n# \u00a0 \u00a0new file: app\/assets\/stylesheets\/home.css.scss\r\n# \u00a0 \u00a0new file: app\/controllers\/home_controller.rb\r\n# \u00a0 \u00a0new file: app\/helpers\/home_helper.rb\r\n# \u00a0 \u00a0new file: app\/views\/home\/index.html.erb\r\n# \u00a0 \u00a0modified: config\/routes.rb\r\n# \u00a0 \u00a0new file: test\/functional\/home_controller_test.rb\r\n# \u00a0 \u00a0new file: test\/unit\/helpers\/home_helper_test.rb<\/pre>\n<p>Al igual que la opci\u00f3n -u, esta opci\u00f3n tambi\u00e9n acepta un patr\u00f3n. En el siguiente ejemplo, actualizamos el \u00edndice con las modificaciones, ficheros nuevos y ficheros borrados s\u00f3lo de la carpeta app\/assets:<\/p>\n<pre>$ git add -A app\/assets\r\n$ git status\r\n# On branch master\r\n<strong><span style=\"color: #000000;\"># Changes to be committed:<\/span><\/strong>\r\n<strong><span style=\"color: #000000;\"># (use \"git reset HEAD &lt;file&gt;...\" to unstage)<\/span><\/strong>\r\n<strong><span style=\"color: #000000;\">#<\/span><\/strong>\r\n<strong><span style=\"color: #000000;\"># \u00a0 \u00a0deleted: app\/assets\/images\/rails.png<\/span><\/strong>\r\n<strong><span style=\"color: #000000;\"># \u00a0 \u00a0new file: app\/assets\/javascripts\/home.js.coffee<\/span><\/strong>\r\n<strong><span style=\"color: #000000;\"># \u00a0 \u00a0new file: app\/assets\/stylesheets\/home.css.scss<\/span><\/strong>\r\n#\r\n# Changes not staged for commit:\r\n# (use \"git add &lt;file&gt;...\" to update what will be committed)\r\n# (use \"git checkout -- &lt;file&gt;...\" to discard changes in working directory)\r\n#\r\n#    modified: config\/routes.rb\r\n#\r\n# Untracked files:\r\n# (use \"git add &lt;file&gt;...\" to include in what will be committed)\r\n#\r\n#    app\/controllers\/home_controller.rb\r\n#    app\/helpers\/home_helper.rb\r\n#    app\/views\/home\/\r\n#    test\/functional\/home_controller_test.rb\r\n#    test\/unit\/helpers\/<\/pre>\n<h1>git-add -n<\/h1>\n<p>Esta opci\u00f3n es muy pr\u00e1ctica ya que nos mostrar\u00e1 en pantalla lo que el comando git-add har\u00eda sin actualizar el \u00edndice. Continuando con el comando anterior (git add -A app\/assets) si quisi\u00e9semos ver qu\u00e9 ficheros se actualizar\u00e1n en el \u00edndice sin realmente actualizarlos, har\u00edamos los siguiente:<\/p>\n<pre>$ git add -n -A app\/assets\r\nremove 'app\/assets\/images\/rails.png'\r\nadd 'app\/assets\/javascripts\/home.js.coffee'\r\nadd 'app\/assets\/stylesheets\/home.css.scss'<\/pre>\n<h1>Resumen<\/h1>\n<p>Hemos visto tres opciones del comando git-add: -u, -A y -n. Las dos primeras nos permiten actualizar en el \u00edndice directamente ficheros borrados sin necesidad de ejecutar el comando git-rm. La \u00faltima opci\u00f3n, -n, simula lo que har\u00e1 el comando git-add sin realmente actualizar el \u00edndice. Los tres son opciones \u00fatiles que de haberlas conocido cuando empec\u00e9 con git hace a\u00f1os me habr\u00edan ahorrado unos cuantos comandos.<\/p>\n<h1>Referencias<\/h1>\n<ul>\n<li><a href=\"http:\/\/git-scm.com\/docs\/git-add\">P\u00e1gina de manual de git-add<\/a><\/li>\n<\/ul>\n","protected":false},"excerpt":{"rendered":"<p>Un comando con el que todos estamos familiarizados es git add. Cuando nos iniciamos en el uso de git, este es de los que no faltan en las recetas que podemos en ver en cualquier tutorial. Es de los primeros que empezamos a utilizar cuando aprendemos git \u00a1En el libro de git de Scott Chacon [&hellip;]<\/p>\n","protected":false},"author":2,"featured_media":0,"comment_status":"closed","ping_status":"open","sticky":false,"template":"","format":"standard","meta":{"_monsterinsights_skip_tracking":false,"_monsterinsights_sitenote_active":false,"_monsterinsights_sitenote_note":"","_monsterinsights_sitenote_category":0,"jetpack_post_was_ever_published":false,"_jetpack_newsletter_access":"","_jetpack_dont_email_post_to_subs":false,"_jetpack_newsletter_tier_id":0,"_jetpack_memberships_contains_paywalled_content":false,"_jetpack_memberships_contains_paid_content":false,"footnotes":"","jetpack_publicize_message":"","jetpack_publicize_feature_enabled":true,"jetpack_social_post_already_shared":true,"jetpack_social_options":{"image_generator_settings":{"template":"highway","enabled":false},"version":2}},"categories":[20,10],"tags":[],"class_list":["post-301","post","type-post","status-publish","format-standard","hentry","category-comandos","category-general"],"jetpack_publicize_connections":[],"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v23.4 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>Opciones del comando git add - Aprende GIT<\/title>\n<meta name=\"description\" content=\"Comentamos el uso de las opciones -u y -A del comando git add, que permiten a\u00f1adir al \u00edndice ficheros borrados directamente sin necesidad de ejecutar git rm\" \/>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/aprendegit.com\/opciones-del-comando-git-add\/\" \/>\n<meta property=\"og:locale\" content=\"es_ES\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"Opciones del comando git add - Aprende GIT\" \/>\n<meta property=\"og:description\" content=\"Comentamos el uso de las opciones -u y -A del comando git add, que permiten a\u00f1adir al \u00edndice ficheros borrados directamente sin necesidad de ejecutar git rm\" \/>\n<meta property=\"og:url\" content=\"https:\/\/aprendegit.com\/opciones-del-comando-git-add\/\" \/>\n<meta property=\"og:site_name\" content=\"Aprende GIT\" \/>\n<meta property=\"article:published_time\" content=\"2013-01-21T13:23:17+00:00\" \/>\n<meta property=\"article:modified_time\" content=\"2024-07-25T14:51:42+00:00\" \/>\n<meta name=\"author\" content=\"alfonso\" \/>\n<meta name=\"twitter:label1\" content=\"Escrito por\" \/>\n\t<meta name=\"twitter:data1\" content=\"alfonso\" \/>\n\t<meta name=\"twitter:label2\" content=\"Tiempo de lectura\" \/>\n\t<meta name=\"twitter:data2\" content=\"7 minutos\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebPage\",\"@id\":\"https:\/\/aprendegit.com\/opciones-del-comando-git-add\/\",\"url\":\"https:\/\/aprendegit.com\/opciones-del-comando-git-add\/\",\"name\":\"Opciones del comando git add - Aprende GIT\",\"isPartOf\":{\"@id\":\"https:\/\/aprendegit.com\/#website\"},\"datePublished\":\"2013-01-21T13:23:17+00:00\",\"dateModified\":\"2024-07-25T14:51:42+00:00\",\"author\":{\"@id\":\"https:\/\/aprendegit.com\/#\/schema\/person\/d7815f12de5748b52eadab35cd0801d5\"},\"description\":\"Comentamos el uso de las opciones -u y -A del comando git add, que permiten a\u00f1adir al \u00edndice ficheros borrados directamente sin necesidad de ejecutar git rm\",\"inLanguage\":\"es\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/aprendegit.com\/opciones-del-comando-git-add\/\"]}]},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/aprendegit.com\/#website\",\"url\":\"https:\/\/aprendegit.com\/\",\"name\":\"Aprende GIT\",\"description\":\"Informaci\u00f3n y experiencias sobre el uso de git\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/aprendegit.com\/?s={search_term_string}\"},\"query-input\":{\"@type\":\"PropertyValueSpecification\",\"valueRequired\":true,\"valueName\":\"search_term_string\"}}],\"inLanguage\":\"es\"},{\"@type\":\"Person\",\"@id\":\"https:\/\/aprendegit.com\/#\/schema\/person\/d7815f12de5748b52eadab35cd0801d5\",\"name\":\"alfonso\",\"image\":{\"@type\":\"ImageObject\",\"inLanguage\":\"es\",\"@id\":\"https:\/\/aprendegit.com\/#\/schema\/person\/image\/\",\"url\":\"https:\/\/aprendegit.com\/wp-content\/litespeed\/avatar\/1\/11264ed1c2ec0decf145ada60ab2ee73.jpg?ver=1725196738\",\"contentUrl\":\"https:\/\/aprendegit.com\/wp-content\/litespeed\/avatar\/1\/11264ed1c2ec0decf145ada60ab2ee73.jpg?ver=1725196738\",\"caption\":\"alfonso\"},\"url\":\"https:\/\/aprendegit.com\/author\/alfonso\/\"}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"Opciones del comando git add - Aprende GIT","description":"Comentamos el uso de las opciones -u y -A del comando git add, que permiten a\u00f1adir al \u00edndice ficheros borrados directamente sin necesidad de ejecutar git rm","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/aprendegit.com\/opciones-del-comando-git-add\/","og_locale":"es_ES","og_type":"article","og_title":"Opciones del comando git add - Aprende GIT","og_description":"Comentamos el uso de las opciones -u y -A del comando git add, que permiten a\u00f1adir al \u00edndice ficheros borrados directamente sin necesidad de ejecutar git rm","og_url":"https:\/\/aprendegit.com\/opciones-del-comando-git-add\/","og_site_name":"Aprende GIT","article_published_time":"2013-01-21T13:23:17+00:00","article_modified_time":"2024-07-25T14:51:42+00:00","author":"alfonso","twitter_misc":{"Escrito por":"alfonso","Tiempo de lectura":"7 minutos"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebPage","@id":"https:\/\/aprendegit.com\/opciones-del-comando-git-add\/","url":"https:\/\/aprendegit.com\/opciones-del-comando-git-add\/","name":"Opciones del comando git add - Aprende GIT","isPartOf":{"@id":"https:\/\/aprendegit.com\/#website"},"datePublished":"2013-01-21T13:23:17+00:00","dateModified":"2024-07-25T14:51:42+00:00","author":{"@id":"https:\/\/aprendegit.com\/#\/schema\/person\/d7815f12de5748b52eadab35cd0801d5"},"description":"Comentamos el uso de las opciones -u y -A del comando git add, que permiten a\u00f1adir al \u00edndice ficheros borrados directamente sin necesidad de ejecutar git rm","inLanguage":"es","potentialAction":[{"@type":"ReadAction","target":["https:\/\/aprendegit.com\/opciones-del-comando-git-add\/"]}]},{"@type":"WebSite","@id":"https:\/\/aprendegit.com\/#website","url":"https:\/\/aprendegit.com\/","name":"Aprende GIT","description":"Informaci\u00f3n y experiencias sobre el uso de git","potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/aprendegit.com\/?s={search_term_string}"},"query-input":{"@type":"PropertyValueSpecification","valueRequired":true,"valueName":"search_term_string"}}],"inLanguage":"es"},{"@type":"Person","@id":"https:\/\/aprendegit.com\/#\/schema\/person\/d7815f12de5748b52eadab35cd0801d5","name":"alfonso","image":{"@type":"ImageObject","inLanguage":"es","@id":"https:\/\/aprendegit.com\/#\/schema\/person\/image\/","url":"https:\/\/aprendegit.com\/wp-content\/litespeed\/avatar\/1\/11264ed1c2ec0decf145ada60ab2ee73.jpg?ver=1725196738","contentUrl":"https:\/\/aprendegit.com\/wp-content\/litespeed\/avatar\/1\/11264ed1c2ec0decf145ada60ab2ee73.jpg?ver=1725196738","caption":"alfonso"},"url":"https:\/\/aprendegit.com\/author\/alfonso\/"}]}},"jetpack_featured_media_url":"","jetpack_shortlink":"https:\/\/wp.me\/p2Y8Ja-4R","jetpack_sharing_enabled":true,"_links":{"self":[{"href":"https:\/\/aprendegit.com\/wp-json\/wp\/v2\/posts\/301"}],"collection":[{"href":"https:\/\/aprendegit.com\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/aprendegit.com\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/aprendegit.com\/wp-json\/wp\/v2\/users\/2"}],"replies":[{"embeddable":true,"href":"https:\/\/aprendegit.com\/wp-json\/wp\/v2\/comments?post=301"}],"version-history":[{"count":8,"href":"https:\/\/aprendegit.com\/wp-json\/wp\/v2\/posts\/301\/revisions"}],"predecessor-version":[{"id":306,"href":"https:\/\/aprendegit.com\/wp-json\/wp\/v2\/posts\/301\/revisions\/306"}],"wp:attachment":[{"href":"https:\/\/aprendegit.com\/wp-json\/wp\/v2\/media?parent=301"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/aprendegit.com\/wp-json\/wp\/v2\/categories?post=301"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/aprendegit.com\/wp-json\/wp\/v2\/tags?post=301"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}